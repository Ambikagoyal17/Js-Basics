function is_array(input) {
  return Array.isArray(input);
}                                         isInstanceof bhi use kar sakte hai

console.log(is_array('w3resource'));   // false
console.log(is_array([1, 2, 4, 0]));   // true


..............................................

let arr=[1,3,4,5,6,6]

let arr1=[...arr]
console.log(arr1)



..............................................
function first(arr, n) {
  if (n == null) return arr[0];
  if (n < 0) return [];
  return arr.slice(0, n);
}

console.log(first([7, 9, 0, -2]));       // 7
console.log(first([], 3));              // []

................................................


function last(arr, n) {
  if (!Array.isArray(arr)) return [];

  if (n === undefined) {
    return arr[arr.length - 1];
  }

  if (n <= 0) {
    return [];
  }

  return arr.slice(-n);
}
console.log(last([7, 9, 0, -2]));       // ➜ -2
console.log(last([7, 9, 0, -2], 3));    // ➜ [9, 0, -2]
console.log(last([7, 9, 0, -2], 6));    // ➜ [7, 9, 0, -2]

...........................................



let colors = ["Red", "Green", "White", "Black"];
console.log(colors.join(", "));       // Red, Green, White, Black
console.log(colors.join("+"));        // Red+Green+White+Black

.............................................

function insertDashes(num) {
  let str = num.toString();
  let result = [str[0]];

  for (let i = 1; i < str.length; i++) {
    if (+str[i] % 2 === 0 && +str[i - 1] % 2 === 0) {
      result.push('-', str[i]);
    } else {
      result.push(str[i]);
    }
  }

  return result.join('');
}

console.log(insertDashes(025468)); // "0-254-6-8"

................................................


let arr1 = [3, 8, 7, 6, 5, -4, 3, 2, 1];
arr1.sort((a, b) => a - b);
console.log(arr1); // [-4,1,2,3,3,5,6,7,8]

..............................................


function mostFrequent(arr) {
  let map = {};
  let maxCount = 0;
  let mostItem;

  for (let i of arr) {
    map[i] = (map[i] || 0) + 1;
    if (map[i] > maxCount) {
      maxCount = map[i];
      mostItem = i;
    }
  }

  console.log(`${mostItem} (${maxCount} times)`);
}

//mostFrequent([3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3]); // a (5 times)

............................................................



function swapCase(str) {
  return str.split('').map(char =>char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase()
  ).join('');
}

console.log(swapCase('The Quick Brown Fox')); // tHE qUICK bROWN fOX
...........................



let a = [
  [1, 2, 1, 24],
  [8, 11, 9, 4],
  [7, 0, 7, 27],
  [7, 4, 28, 14],
  [3, 10, 26, 7]
];

for (let i = 0; i < a.length; i++) {
  console.log("row " + i);
  for (let j = 0; j < a[i].length; j++) {
    console.log(" " + a[i][j]);
  }
}
.....................................

function sumSquares(arr) {
  return arr.reduce((sum, val) => sum + val * val, 0);
}

console.log(sumSquares([1, 2, 3])); // 14


..............................................
function sumAndProduct(arr) {
  let sum = arr.reduce((a, b) => a + b, 0);
  let product = arr.reduce((a, b) => a * b, 1);
  console.log(`Sum = ${sum}, Product = ${product}`);
}

sumAndProduct([1, 2, 3, 4]); // Sum = 10, Product = 24

....................................................



function removeDuplicates(arr) {
  let seen = new Set();
  return arr.filter(item => {
    let lower = typeof item === 'string' ? item.toLowerCase() : item;
    if (seen.has(lower)) return false;
    seen.add(lower);
    return true;
  });
}

console.log(removeDuplicates(['a', 'A', 'b', 'B', 'a', 'C', 'c'])); // ['a','b','C']


.....................................................


let colors = ["Blue", "Green", "Red", "Orange", "Violet", "Indigo", "Yellow"];
let suffixes = ["st", "nd", "rd"];

for (let i = 0; i < colors.length; i++) {
  let pos = i + 1;
  let suffix = suffixes[i] || "th"; // Use st, nd, rd for 1st, 2nd, 3rd — else th

  console.log(pos + suffix + " choice is " + colors[i] + ".");
}

...................................................

function findLeapYears(years) {
  return years.filter(year =>
    (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0)
  );
}

console.log(findLeapYears([2000, 2001, 2004, 1900])); // [2000, 2004]

...............................


function shuffle(arr) {
  return arr.sort(() => Math.random() - 0.5);
}

console.log(shuffle([1, 2, 3, 4, 5]));

..............................


function binary_Search(arr, target) {
  let low = 0;
  let high = arr.length - 1;

  while (low <= high) {
    let mid = Math.floor((low + high) / 2);

    if (arr[mid] === target) return mid;
    else if (arr[mid] < target) low = mid + 1;
    else high = mid - 1;
  }

  return -1; // not found
}

let items = [1, 2, 3, 4, 5, 7, 8, 9];

console.log(binary_Search(items, 1)); // ➜ 0
console.log(binary_Search(items, 5)); // ➜ 4

.............................................




let array1 = [1, 0, 2, 3, 4];
let array2 = [3, 5, 6, 7, 8, 13];

let maxLength = Math.max(array1.length, array2.length);
let result = [];

for (let i = 0; i < maxLength; i++) {
  let val1 = array1[i] || 0;
  let val2 = array2[i] || 0;
  result.push(val1 + val2);
}

console.log(result); // ➜ [4, 5, 8, 10, 12, 13]

...........................................



function findDuplicates(arr) {
  let seen = [];
  let duplicates = [];

  for (let i = 0; i < arr.length; i++) {
    if (seen.includes(arr[i])) {
      if (!duplicates.includes(arr[i])) {
        duplicates.push(arr[i]);
      }
    } else {
      seen.push(arr[i]);
    }
  }

  return duplicates;
}

let sample = [1, 2, 3, 2, 4, 5, 3, 6];
console.log(findDuplicates(sample)); // ➜ [2, 3]


.........................................


let nested = [1, [2], [3, [[4]]], [5, 6]];
let flat = nested.flat();

console.log(flat); // [1, 2, 3, [[4]], 5, 6]



function union(arr1, arr2) {
  return [...new Set([...arr1, ...arr2])].sort((a, b) => a - b);
}

console.log(union([1, 2, 3], [100, 2, 1, 10]));
// ➜ [1, 2, 3, 10, 100]


........................................

function difference(a, b) {
  let result = [];

  for (let i = 0; i < a.length; i++) {
    if (!b.includes(a[i])) {
      result.push(a[i]);
    }
  }

  for (let i = 0; i < b.length; i++) {
    if (!a.includes(b[i])) {
      result.push(b[i]);
    }
  }

  return result;
}

console.log(difference([1, 2, 3], [2, 3, 4])); // ➜ [1, 4]


................................................


function findSumPair(arr, target) {
  for (let i = 0; i < arr.length; i++) {
    for (let j = i + 1; j < arr.length; j++) {
      if (arr[i] + arr[j] === target) {
        return [i, j];
      }
    }
  }
}

console.log(findSumPair([10, 20, 10, 40, 50, 60, 70], 50)); // [3, 4]


...........................................



let arr = [NaN, 1,0, 15, false, -22, '', undefined, 47, null];
let truthy = arr.filter(Boolean);

console.log(truthy); // [15, -22, 47]


..........................................

function longest_common_starting_substring(arr) {
  if (arr.length === 0) return '';
  let prefix = arr[0];

  for (let i = 1; i < arr.length; i++) {
    while (arr[i].indexOf(prefix) !== 0) {
      prefix = prefix.slice(0, -1);
      if (prefix === '') return '';
    }
  }

  return prefix;
}

console.log(longest_common_starting_substring(['go', 'google'])); // "go"

................................................



function num_string_range(start, end, step) {
  let result = [];
  let s = start.charCodeAt(0);
  let e = end.charCodeAt(0);

  for (let i = s; i <= e; i += step) {
    result.push(String.fromCharCode(i));
  }

  return result;
}

console.log(num_string_range('a', 'z', 2));
//Output: ["a", "c", "e", "g", "i", "k", "m", "o", "q", "s", "u", "w", "y"]



.....................................................

function merge_array(a, b) {
  return [...new Set([...a, ...b])];
}

var array1 = [1, 2, 3];
var array2 = [2, 30, 1];
console.log(merge_array(array1, array2)); // [1, 2, 3, 30]


..................................


function remove_array_element(arr, value) {
  return arr.filter(item => item !== value);
}

console.log(remove_array_element([2, 5, 9, 6], 5)); 
// Output: [2, 9, 6]

.......................................




function array_contains(arr, value) {
  return arr.includes(value);
}

console.log(array_contains([2, 5, 9, 6], 5)); // Output: true
console.log(array_contains([2, 5, 9, 6], 7)); // Output: false
.................................



let arr = [1, 2, 3, 4];
arr.length = 0;

console.log(arr); // Output: []

...........................................




function nthlargest(arr, n) {
  let sorted = arr.sort((a, b) => b - a);
  return sorted[n - 1];
}

console.log(nthlargest([43, 56, 23, 89, 88, 90, 99, 652], 4)); 
// Output: 89
.........................................



function random_item(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

console.log(random_item([1, 2, 3, 4, 5]));


.....................................


function array_filled(length, value) {
  return Array(length).fill(value);
}

console.log(array_filled(6, 0));    // [0, 0, 0, 0, 0, 0]
console.log(array_filled(4, 11));   // [11, 11, 11, 11]

.............................


function array_filled(length, value) {
  return Array(length).fill(value);
}

console.log(array_filled(3, 'default value')); 
// ["default value", "default value", "default value"]

console.log(array_filled(4, 'password'));      
// ["password", "password", "password", "password"]


.............................................

function filterFalsy(arr) {
  return arr.filter(Boolean);
}

console.log(filterFalsy([NaN, 0, 15, false, -22, '', undefined, 47, null]));
// Output: [15, -22, 47]


.............................................

function array_range(start, end) {
  let result = [];
  for (let i = start; i <= end; i++) {
    result.push(i);
  }
  return result;
}

................................


function difference(arr1, arr2) {
  const flat1 = arr1.flat(Infinity).map(String);
  const flat2 = arr2.flat(Infinity).map(String);

  const combined = [...new Set([...flat1, ...flat2])];

  return combined;
}



